# Generated by Django 5.0.6 on 2024-05-20 23:46

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('seraiva', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='book',
            name='format',
            field=models.TextField(choices=[('1', 'Fisico'), ('2', 'E-Book')], max_length=30),
        ),
        migrations.AlterField(
            model_name='book',
            name='stars',
            field=models.CharField(choices=[('5', '5'), ('1', '1'), ('3', '3'), ('4', '4'), ('2', '2')], max_length=30),
        ),
        migrations.AlterField(
            model_name='book',
            name='stats',
            field=models.CharField(choices=[('1', 'Pendente'), ('2', 'Cancelado'), ('3', 'Aprovado')], max_length=30),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('cellphone', models.CharField(max_length=12)),
                ('rank', models.CharField(choices=[('0', 'user'), ('1', 'librarian'), ('3', 'admin'), ('2', 'author')], max_length=30)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
